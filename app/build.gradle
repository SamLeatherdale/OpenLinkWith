plugins {
  id 'com.android.application'
}
apply from: configFile('android-common-config.gradle')

static def loadPropertiesFile(File file) {
  def props = new Properties()
  if (file.exists()) {
    file.withInputStream { stream -> props.load(stream) }
  } else {
    throw new GradleException("Required properties file not found: ${file.absolutePath}")
  }
  return props
}

def gradlePrefix = "gradle/"
def debugSigning = loadPropertiesFile(rootProject.file(gradlePrefix + "debug.signing"))
def releaseSigning = loadPropertiesFile(rootProject.file(gradlePrefix + "release.signing"))

def googleServicesPath = "app/google-services.json"
def enableGoogleServices = true

gradle.startParameter.taskNames.each { taskName ->
  if (taskName.toLowerCase().contains('floss')) {
    enableGoogleServices = false
  }
}

if (rootProject.file(googleServicesPath).exists() && enableGoogleServices) {
  logger.warn("Enabling Google Services for this build.")
  apply plugin: 'com.google.gms.google-services'
  apply plugin: 'com.google.firebase.crashlytics'
} else {
  logger.warn("Skipping Google Services for this build.")
}

android {
  namespace 'com.tasomaniac.openwith'

  defaultConfig {
    applicationId 'com.samleatherdale.openwith'
    versionCode versions.versionCode
    versionName versions.versionName
    resourceConfigurations += ['ar', 'de', 'en', 'es', 'fi', 'fr', 'hi', 'hr', 'in', 'it', 'iw', 'ja', 'ko', 'nl', 'pl', 'pt-rBR', 'pt-rPT', 'ru', 'sv', 'tr', 'uk', 'vi', 'zh-rCN', 'zh-rTW']

  }

  signingConfigs {
      debug {
        storeFile rootProject.file(gradlePrefix + debugSigning['storeFile'])
        storePassword debugSigning['storePassword']
        keyAlias debugSigning['keyAlias']
        keyPassword debugSigning['keyPassword']
      }
      release {
        storeFile rootProject.file(gradlePrefix + releaseSigning['storeFile'])
        storePassword releaseSigning['storePassword']
        keyAlias releaseSigning['keyAlias']
        keyPassword releaseSigning['keyPassword']
      }
  }

  buildTypes {
    debug {
      ext.enableCrashlytics = false
      applicationIdSuffix '.debug'
      versionNameSuffix '-debug'
      signingConfig signingConfigs.debug
    }

    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }

  flavorDimensions 'store'
  productFlavors {
    floss {
      applicationIdSuffix '.floss'
      versionNameSuffix '-floss'
    }
    play {}
  }
}

configurations {
  implementation.exclude module: 'support-v4'
  compile.exclude module: 'support-v4'
}

dependencies {
  implementation project(':base-prefs')
  implementation project(':browser-preferred')
  implementation project(':browser-resolver')
  implementation project(':data')
  implementation project(':homescreen')
  implementation project(':intro')
  implementation project(':preferred-apps')
  implementation project(':redirect')
  implementation project(':resolver')

  implementation 'androidx.preference:preference-ktx:1.1.1'
  implementation 'androidx.sharetarget:sharetarget:1.2.0-rc01'

  implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"

  playImplementation platform('com.google.firebase:firebase-bom:33.14.0')

  playImplementation 'com.google.firebase:firebase-analytics'
  playImplementation 'com.google.firebase:firebase-crashlytics'

  testImplementation project(':test-support')
}
